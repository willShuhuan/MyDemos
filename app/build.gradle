apply plugin: 'com.android.application'
//apply plugin: 'com.neenbedankt.android-apt'//bufferknife相关
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.dshPlugin'

//------------------  gradle插件start  ------------------
//apply plugin:dshPlugin
//
////自定义插件
//class dshPlugin implements Plugin<Project>{
//
//    @Override
//    void apply(Project target) {
//        def extension = target.extensions.create('dshE',dshExtension)
//        println("Hello 修改前：${extension.name}")
//
//        target.afterEvaluate {
//            println("Hello 修改后：${extension.name}")
//        }
//    }
//}
//
//class dshExtension{
//    def name = '大欢安卓gradle扩展插件'
//}
//
//
//dshE{
//    name 'dsh_gradle'
//    //等价于方法调用 -> name('dsh_gradle')->setName('dsh_gradle')
//}


//------------------  gradle插件end  ------------------


android {
    signingConfigs {
        release {
            storeFile file('dshKey.store')
            storePassword '123456'
            keyAlias 'dsh'
            keyPassword '123456'
        }
    }
    compileSdkVersion rootProject.ext.android["compile_sdk_version"]
    buildToolsVersion rootProject.ext.android["build_tools_version"]

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    defaultConfig {
        applicationId "com.dsh.mydemos"
        minSdkVersion rootProject.ext.android["min_sdk_version"]
        targetSdkVersion rootProject.ext.android["target_sdk_version"]
        versionCode rootProject.ext.android["version_code"]
        versionName rootProject.ext.android["version_name"]
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
            }
        }

        ndk {
            abiFilters "armeabi-v7a","x86"
        }

        dataBinding{
            enabled false
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug{
            buildConfigField("String","BaseURL",'"http://api.dshcoder.com"')
        }

        internal{
            initWith debug
        }
    }

    //Gradle3.0版本开始需要配置渠道维度，不配置则报错
//    flavorDimensions 'language','market'
//    flavorDimensions 'language'
//    productFlavors{
//        cn{
//            dimension 'language'
//        }
//        en{
//            dimension 'language'
//        }
//        yingyongbao{
//            dimension 'market'
//        }
//        xiaomi{
//            dimension 'market'
//        }
//    }
}

greendao{
    schemaVersion 1//数据库版本号
    daoPackage 'com.dsh.mydemos.greendao'//设置DaoMaster、DaoSession、Dao包名
    targetGenDir 'src/main/java'
}

dependencies {
    implementation 'com.android.support.constraint:constraint-layout:2.0.2'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation project(':dshzxinglib')
    testImplementation rootProject.ext.dependencies["junit"]

    implementation rootProject.ext.dependencies["appcompat-v7"]
    implementation rootProject.ext.dependencies["support-v4"]
    implementation rootProject.ext.dependencies["design"]
    implementation rootProject.ext.dependencies["vector-drawable"]
    implementation rootProject.ext.dependencies["permission"]
    implementation rootProject.ext.dependencies["rxandroid2"]
    implementation rootProject.ext.dependencies["rxjava2"]
    implementation rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    implementation rootProject.ext.dependencies["flowlayout"]
    implementation rootProject.ext.dependencies["greendao"]
    implementation rootProject.ext.dependencies["GreenDaoUpgradeHelper"]
    implementation rootProject.ext.dependencies["multidex"]
    implementation rootProject.ext.dependencies["cardview-v7"]
    implementation rootProject.ext.dependencies["rxpermissions2"]
    implementation rootProject.ext.dependencies["glide"]
    implementation rootProject.ext.dependencies["okhttp"]
    annotationProcessor 'com.github.bumptech.glide:compiler:4.6.1'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.google.code.gson:gson:2.8.5"
    implementation 'com.squareup.retrofit2:retrofit:2.7.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.7.2'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.7.2'

    //apt+反射，仿butterknife实现
    implementation project(':lib')
    annotationProcessor project(':lib-processor')

    implementation 'com.squareup.okio:okio:2.4.3'

    //implementation/api区别
    implementation project(':gradlelib1')

    compileOnly 'com.android.tools.build:gradle:3.5.4'

    //leakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.3'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.3'
    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
    //block-canary
    implementation 'com.github.markzhai:blockcanary-android:1.5.0'


}
repositories {
    mavenCentral()
}
